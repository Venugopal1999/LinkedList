Given a linked list, swap every two adjacent nodes and return its head.
You may not modify the values in the list's nodes, only nodes itself may be changed.
 
Example:
Given 1->2->3->4, you should return the list as 2->1->4->3.



Java:

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	Scanner s=new Scanner(System.in);
	int l1=s.nextInt();

	LinkedList <Integer>ll=new LinkedList<Integer>();
	LinkedList <Integer>ll1=new LinkedList<Integer>();
	for(int i=0;i<l1;i++)
	ll.add(s.nextInt());
   for(int i=0;i<l1;i=i+2)
   {
   
       if((l1%2!=0)&&(i!=(l1-1)))
       {
       int y=(Integer)ll.get(i+1);
        ll1.add(y);
           
       }
          int x=(Integer)ll.get(i);
       ll1.add(x);
   }
    System.out.println(ll1);

	}
}
